{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderLineChartScreen.js\",\n  _s = $RefreshSig$();\n// src/screens/ProductChartScreen.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProducts } from '../actions/productActions';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductChartScreen = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [chartData, setChartData] = useState([]);\n  const {\n    loading,\n    error,\n    products\n  } = useSelector(state => state.productList);\n  useEffect(() => {\n    dispatch(listProducts('')); // Fetch all products\n\n    if (products) {\n      // Prepare data for the chart\n      const preparedData = products.map(product => ({\n        name: product.name,\n        price: product.price\n      }));\n      setChartData(preparedData);\n    }\n  }, [dispatch, products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '25px',\n      overflowX: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) // Show loader while fetching data\n    : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '70vh'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"price\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductChartScreen, \"e3QtkhSs5hAkJpgeTnR4tpyGizc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ProductChartScreen;\nexport default ProductChartScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductChartScreen\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Loader","Message","listProducts","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ProductChartScreen","_s","dispatch","chartData","setChartData","loading","error","products","state","productList","preparedData","map","product","name","price","style","padding","overflowX","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","width","height","data","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderLineChartScreen.js"],"sourcesContent":["// src/screens/ProductChartScreen.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProducts } from '../actions/productActions';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst ProductChartScreen = () => {\n    const dispatch = useDispatch();\n    const [chartData, setChartData] = useState([]);\n    const { loading, error, products } = useSelector(state => state.productList);\n\n    useEffect(() => {\n        dispatch(listProducts('')); // Fetch all products\n\n        if (products) {\n            // Prepare data for the chart\n            const preparedData = products.map(product => ({\n                name: product.name,\n                price: product.price,\n            }));\n            setChartData(preparedData);\n        }\n    }, [dispatch, products]);\n\n    return (\n        <div style={{ padding: '25px', overflowX: 'auto' }}>\n            <h1>Product Price Chart</h1>\n            {loading ? (\n                <Loader /> // Show loader while fetching data\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <div style={{ width: '100%', height: '70vh' }}> {/* Adjusted height to be responsive */}\n                    <ResponsiveContainer>\n                        <BarChart data={chartData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Bar dataKey=\"price\" fill=\"#8884d8\" />\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProductChartScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}