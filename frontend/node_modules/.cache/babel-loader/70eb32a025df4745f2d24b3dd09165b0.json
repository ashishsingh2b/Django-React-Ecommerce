{"ast":null,"code":"// import React, { useEffect } from 'react'\n// import { LinkContainer } from 'react-router-bootstrap'\n// import { Table, Button, Row, Col } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n// import Paginate from '../components/Paginate'\n// import { listProducts, deleteProduct, createProduct } from '../actions/productActions'\n// import { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n// import { Link } from 'react-router-dom';\n\n// function ProductListScreen({ history, match }) {\n\n//     const dispatch = useDispatch()\n\n//     const productList = useSelector(state => state.productList)\n//     const { loading, error, products, pages, page } = productList\n\n//     const productDelete = useSelector(state => state.productDelete)\n//     const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n//     const productCreate = useSelector(state => state.productCreate)\n//     const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n\n//     let keyword = history.location.search\n//     useEffect(() => {\n//         dispatch({ type: PRODUCT_CREATE_RESET })\n\n//         if (!userInfo.isAdmin) {\n//             history.push('/login')\n//         }\n\n//         if (successCreate) {\n//             history.push(`/admin/product/${createdProduct._id}/edit`)\n//         } else {\n//             dispatch(listProducts(keyword))\n//         }\n\n//     }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n//     const deleteHandler = (id) => {\n\n//         if (window.confirm('Are you sure you want to delete this product?')) {\n//             dispatch(deleteProduct(id))\n//         }\n//     }\n\n//     const createProductHandler = () => {\n//         dispatch(createProduct())\n//     }\n\n//     return (\n//         <div>\n//             <Row className='align-items-center'>\n//                 <Col>\n//                     <h1>Products</h1>\n//                 </Col>\n\n//                 <Col className='text-right'>\n//                     <Button className='my-3' onClick={createProductHandler}>\n//                         <i className='fas fa-plus'></i> Create Product\n//                     </Button>\n//                 </Col>\n//             </Row>\n\n//             {loadingDelete && <Loader />}\n//             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n//             {loadingCreate && <Loader />}\n//             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n//             {loading\n//                 ? (<Loader />)\n//                 : error\n//                     ? (<Message variant='danger'>{error}</Message>)\n//                     : (\n//                         <div>\n//                             <Table striped bordered hover responsive className='table-sm'>\n//                                 <thead>\n//                                     <tr>\n//                                         <th>ID</th>\n//                                         <th>NAME</th>\n//                                         <th>PRICE</th>\n//                                         <th>CATEGORY</th>\n//                                         <th>BRAND</th>\n//                                         <th></th>\n//                                     </tr>\n//                                 </thead>\n\n//                                 <tbody>\n//                                     {products.map(product => (\n//                                         <tr key={product._id}>\n//                                             <td>{product._id}</td>\n//                                             <td>{product.name}</td>\n//                                             <td>${product.price}</td>\n//                                             <td>{product.category}</td>\n//                                             <td>{product.brand}</td>\n\n//                                             <td>\n//                                                 <LinkContainer to={`/admin/product/${product._id}/edit`}>\n//                                                     <Button variant='light' className='btn-sm'>\n//                                                         <i className='fas fa-edit'></i>\n//                                                     </Button>\n//                                                 </LinkContainer>\n\n//                                                 <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n//                                                     <i className='fas fa-trash'></i>\n//                                                 </Button>\n//                                             </td>\n//                                         </tr>\n//                                     ))}\n//                                 </tbody>\n//                             </Table>\n//                             <Row className='py-3'>\n//                                 <Col>\n//                                     <Link\n//                                         to={{\n//                                             pathname: '/productlist',\n//                                             state: { products }\n//                                         }}\n//                                     >\n//                                       ProductChart\n//                                     </Link>\n//                                 </Col>\n//                             </Row>\n//                             <Paginate pages={pages} page={page} isAdmin={true} />\n//                         </div>\n\n//                     )}\n//         </div>\n//     )\n// }\n\n// export default ProductListScreen","map":{"version":3,"names":[],"sources":["/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/ProductListScreen.js"],"sourcesContent":["// import React, { useEffect } from 'react'\n// import { LinkContainer } from 'react-router-bootstrap'\n// import { Table, Button, Row, Col } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n// import Paginate from '../components/Paginate'\n// import { listProducts, deleteProduct, createProduct } from '../actions/productActions'\n// import { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n// import { Link } from 'react-router-dom';\n\n// function ProductListScreen({ history, match }) {\n\n//     const dispatch = useDispatch()\n\n//     const productList = useSelector(state => state.productList)\n//     const { loading, error, products, pages, page } = productList\n\n//     const productDelete = useSelector(state => state.productDelete)\n//     const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n//     const productCreate = useSelector(state => state.productCreate)\n//     const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n\n//     let keyword = history.location.search\n//     useEffect(() => {\n//         dispatch({ type: PRODUCT_CREATE_RESET })\n\n//         if (!userInfo.isAdmin) {\n//             history.push('/login')\n//         }\n\n//         if (successCreate) {\n//             history.push(`/admin/product/${createdProduct._id}/edit`)\n//         } else {\n//             dispatch(listProducts(keyword))\n//         }\n\n//     }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n//     const deleteHandler = (id) => {\n\n//         if (window.confirm('Are you sure you want to delete this product?')) {\n//             dispatch(deleteProduct(id))\n//         }\n//     }\n\n//     const createProductHandler = () => {\n//         dispatch(createProduct())\n//     }\n\n//     return (\n//         <div>\n//             <Row className='align-items-center'>\n//                 <Col>\n//                     <h1>Products</h1>\n//                 </Col>\n\n//                 <Col className='text-right'>\n//                     <Button className='my-3' onClick={createProductHandler}>\n//                         <i className='fas fa-plus'></i> Create Product\n//                     </Button>\n//                 </Col>\n//             </Row>\n\n//             {loadingDelete && <Loader />}\n//             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n//             {loadingCreate && <Loader />}\n//             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n//             {loading\n//                 ? (<Loader />)\n//                 : error\n//                     ? (<Message variant='danger'>{error}</Message>)\n//                     : (\n//                         <div>\n//                             <Table striped bordered hover responsive className='table-sm'>\n//                                 <thead>\n//                                     <tr>\n//                                         <th>ID</th>\n//                                         <th>NAME</th>\n//                                         <th>PRICE</th>\n//                                         <th>CATEGORY</th>\n//                                         <th>BRAND</th>\n//                                         <th></th>\n//                                     </tr>\n//                                 </thead>\n\n//                                 <tbody>\n//                                     {products.map(product => (\n//                                         <tr key={product._id}>\n//                                             <td>{product._id}</td>\n//                                             <td>{product.name}</td>\n//                                             <td>${product.price}</td>\n//                                             <td>{product.category}</td>\n//                                             <td>{product.brand}</td>\n\n//                                             <td>\n//                                                 <LinkContainer to={`/admin/product/${product._id}/edit`}>\n//                                                     <Button variant='light' className='btn-sm'>\n//                                                         <i className='fas fa-edit'></i>\n//                                                     </Button>\n//                                                 </LinkContainer>\n\n//                                                 <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n//                                                     <i className='fas fa-trash'></i>\n//                                                 </Button>\n//                                             </td>\n//                                         </tr>\n//                                     ))}\n//                                 </tbody>\n//                             </Table>\n//                             <Row className='py-3'>\n//                                 <Col>\n//                                     <Link\n//                                         to={{\n//                                             pathname: '/productlist',\n//                                             state: { products }\n//                                         }}\n//                                     >\n//                                       ProductChart\n//                                     </Link>\n//                                 </Col>\n//                             </Row>\n//                             <Paginate pages={pages} page={page} isAdmin={true} />\n//                         </div>\n                        \n//                     )}\n//         </div>\n//     )\n// }\n\n// export default ProductListScreen\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}