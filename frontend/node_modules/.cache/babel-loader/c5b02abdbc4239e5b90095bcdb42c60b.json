{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderLineChartScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useLocation } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\n// Function to format date to YYYY-MM\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  return `${year}-${month}`;\n};\n\n// Function to aggregate data by month\nconst aggregateDataByMonth = orders => {\n  const monthlyData = {};\n  orders.forEach(order => {\n    const month = formatDate(order.createdAt);\n    if (!monthlyData[month]) {\n      monthlyData[month] = 0;\n    }\n    monthlyData[month] += order.totalPrice;\n  });\n  return Object.entries(monthlyData).map(([month, totalPrice]) => ({\n    month,\n    totalPrice\n  }));\n};\nconst OrderChartScreen = () => {\n  _s();\n  const location = useLocation();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const fetchedData = location.state ? location.state.orders : [];\n        const paidOrders = fetchedData.filter(order => order.isPaid);\n        const aggregatedData = aggregateDataByMonth(paidOrders);\n        setData(aggregatedData);\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location.state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '25px',\n      overflowX: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) // Show loader while fetching data\n    : data.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"No paid orders to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '70vh'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\",\n            tickFormatter: value => `${value.substring(0, 7)}`,\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"totalPrice\",\n            fill: \"#32a852\" // Green color\n            ,\n            barSize: 20 // Slim columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderChartScreen, \"8pE79yNy6J7tzvCeHdXEKVRUJEY=\", false, function () {\n  return [useLocation];\n});\n_c = OrderChartScreen;\nexport default OrderChartScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderChartScreen\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","useLocation","Loader","Message","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","toString","padStart","aggregateDataByMonth","orders","monthlyData","forEach","order","createdAt","totalPrice","Object","entries","map","OrderChartScreen","_s","location","data","setData","loading","setLoading","fetchData","fetchedData","state","paidOrders","filter","isPaid","aggregatedData","error","console","style","padding","overflowX","children","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","width","height","strokeDasharray","dataKey","tickFormatter","value","substring","domain","fill","barSize","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderLineChartScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useLocation } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\n// Function to format date to YYYY-MM\nconst formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    return `${year}-${month}`;\n};\n\n// Function to aggregate data by month\nconst aggregateDataByMonth = (orders) => {\n    const monthlyData = {};\n\n    orders.forEach(order => {\n        const month = formatDate(order.createdAt);\n        if (!monthlyData[month]) {\n            monthlyData[month] = 0;\n        }\n        monthlyData[month] += order.totalPrice;\n    });\n\n    return Object.entries(monthlyData).map(([month, totalPrice]) => ({\n        month,\n        totalPrice\n    }));\n};\n\nconst OrderChartScreen = () => {\n    const location = useLocation();\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const fetchedData = location.state ? location.state.orders : [];\n                const paidOrders = fetchedData.filter(order => order.isPaid);\n                const aggregatedData = aggregateDataByMonth(paidOrders);\n                setData(aggregatedData);\n            } catch (error) {\n                console.error('Failed to fetch data:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [location.state]);\n\n    return (\n        <div style={{ padding: '25px', overflowX: 'auto' }}>\n            <h1>Order Chart</h1>\n            {loading ? (\n                <Loader /> // Show loader while fetching data\n            ) : data.length === 0 ? (\n                <Message variant='info'>No paid orders to display</Message>\n            ) : (\n                <div style={{ width: '100%', height: '70vh' }}> {/* Adjusted height to be responsive */}\n                    <ResponsiveContainer>\n                        <BarChart data={data}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis\n                                dataKey=\"month\"\n                                tickFormatter={(value) => `${value.substring(0, 7)}`}\n                                domain={['auto', 'auto']}\n                            />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Bar \n                                dataKey=\"totalPrice\" \n                                fill=\"#32a852\" // Green color\n                                barSize={20} // Slim columns\n                            />\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default OrderChartScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}