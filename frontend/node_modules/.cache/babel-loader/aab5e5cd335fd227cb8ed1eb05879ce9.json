{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { Line } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\n// import axios from 'axios';\n// import { Spinner, Alert } from 'react-bootstrap';\n\n// ChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\n\n// const OrderLineChartScreen = () => {\n//     const [orders, setOrders] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         const fetchOrders = async () => {\n//             try {\n//                 const { data } = await axios.get('http://127.0.0.1:8000/api/orders/'); // Ensure this URL is correct\n//                 setOrders(data);\n//                 setLoading(false);\n//             } catch (err) {\n//                 setError(err.message);\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchOrders();\n//     }, []);\n\n//     const data = {\n//         labels: orders.map(order => order.createdAt.substring(0, 10)), // X-axis labels (dates)\n//         datasets: [\n//             {\n//                 label: 'Total Sales',\n//                 data: orders.map(order => order.totalPrice), // Y-axis data (total sales)\n//                 borderColor: 'rgba(75, 192, 192, 1)',\n//                 backgroundColor: 'rgba(75, 192, 192, 0.2)',\n//                 fill: true,\n//             },\n//         ],\n//     };\n\n//     return (\n//         <div>\n//             <h1>Order Sales Chart</h1>\n//             {loading ? (\n//                 <Spinner animation=\"border\" />\n//             ) : error ? (\n//                 <Alert variant=\"danger\">{error}</Alert>\n//             ) : (\n//                 <Line data={data} />\n//             )}\n//         </div>\n//     );\n// };\n\n// export default OrderLineChartScreen;","map":{"version":3,"names":[],"sources":["/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderLineChartScreen.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Line } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\n// import axios from 'axios';\n// import { Spinner, Alert } from 'react-bootstrap';\n\n// ChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\n\n// const OrderLineChartScreen = () => {\n//     const [orders, setOrders] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         const fetchOrders = async () => {\n//             try {\n//                 const { data } = await axios.get('http://127.0.0.1:8000/api/orders/'); // Ensure this URL is correct\n//                 setOrders(data);\n//                 setLoading(false);\n//             } catch (err) {\n//                 setError(err.message);\n//                 setLoading(false);\n//             }\n//         };\n        \n//         fetchOrders();\n//     }, []);\n\n//     const data = {\n//         labels: orders.map(order => order.createdAt.substring(0, 10)), // X-axis labels (dates)\n//         datasets: [\n//             {\n//                 label: 'Total Sales',\n//                 data: orders.map(order => order.totalPrice), // Y-axis data (total sales)\n//                 borderColor: 'rgba(75, 192, 192, 1)',\n//                 backgroundColor: 'rgba(75, 192, 192, 0.2)',\n//                 fill: true,\n//             },\n//         ],\n//     };\n\n//     return (\n//         <div>\n//             <h1>Order Sales Chart</h1>\n//             {loading ? (\n//                 <Spinner animation=\"border\" />\n//             ) : error ? (\n//                 <Alert variant=\"danger\">{error}</Alert>\n//             ) : (\n//                 <Line data={data} />\n//             )}\n//         </div>\n//     );\n// };\n\n// export default OrderLineChartScreen;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}