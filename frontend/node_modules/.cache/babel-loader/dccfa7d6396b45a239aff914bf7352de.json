{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/ProductChartScreen.js\",\n  _s = $RefreshSig$();\n// src/screens/ProductChartScreen.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useLocation } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductChartScreen = () => {\n  _s();\n  const location = useLocation();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = () => {\n      try {\n        // Use data passed through location state\n        const fetchedData = location.state && location.state.products || [];\n        console.log('Fetched Data:', fetchedData); // Debug: Check fetched data\n\n        // Organize data by category\n        const categoryData = fetchedData.reduce((acc, product) => {\n          if (!acc[product.category]) {\n            acc[product.category] = [];\n          }\n          acc[product.category].push({\n            name: product.name,\n            stock: product.countInStock // Assuming countInStock is the stock quantity\n          });\n          return acc;\n        }, {});\n        console.log('Category Data:', categoryData); // Debug: Check organized data\n\n        // Transform data into format suitable for the chart\n        const transformedData = Object.keys(categoryData).map(category => ({\n          category,\n          products: categoryData[category]\n        }));\n        console.log('Transformed Data:', transformedData); // Debug: Check transformed data\n\n        setData(transformedData);\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location.state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '25px',\n      overflowX: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Stock by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) // Show loader while fetching data\n    : data.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"No products to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '70vh'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: ({\n              payload\n            }) => {\n              if (payload && payload.length) {\n                const {\n                  category,\n                  products\n                } = payload[0].payload;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-tooltip\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Category:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 52\n                    }, this), \" \", category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 49\n                  }, this), products.map(product => /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [product.name, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 57\n                    }, this), \" \", product.stock, \" units\"]\n                  }, product.name, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 45\n                }, this);\n              }\n              return null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), data.flatMap(d => d.products.map(p => p.name)).map((name, index) => /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: `products.${index}.stock`,\n            name: name,\n            fill: getColor(index)\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n// Function to get color for each bar (you can customize this)\n_s(ProductChartScreen, \"8pE79yNy6J7tzvCeHdXEKVRUJEY=\", false, function () {\n  return [useLocation];\n});\n_c = ProductChartScreen;\nconst getColor = index => {\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c', '#d0ed57'];\n  return colors[index % colors.length];\n};\nexport default ProductChartScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductChartScreen\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","useLocation","Loader","Message","jsxDEV","_jsxDEV","ProductChartScreen","_s","location","data","setData","loading","setLoading","fetchData","fetchedData","state","products","console","log","categoryData","reduce","acc","product","category","push","name","stock","countInStock","transformedData","Object","keys","map","error","style","padding","overflowX","children","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","content","payload","className","flatMap","d","p","index","fill","getColor","_c","colors","$RefreshReg$"],"sources":["/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/ProductChartScreen.js"],"sourcesContent":["// src/screens/ProductChartScreen.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useLocation } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nconst ProductChartScreen = () => {\n    const location = useLocation();\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = () => {\n            try {\n                // Use data passed through location state\n                const fetchedData = (location.state && location.state.products) || [];\n                \n                console.log('Fetched Data:', fetchedData); // Debug: Check fetched data\n\n                // Organize data by category\n                const categoryData = fetchedData.reduce((acc, product) => {\n                    if (!acc[product.category]) {\n                        acc[product.category] = [];\n                    }\n                    acc[product.category].push({\n                        name: product.name,\n                        stock: product.countInStock // Assuming countInStock is the stock quantity\n                    });\n                    return acc;\n                }, {});\n\n                console.log('Category Data:', categoryData); // Debug: Check organized data\n\n                // Transform data into format suitable for the chart\n                const transformedData = Object.keys(categoryData).map(category => ({\n                    category,\n                    products: categoryData[category]\n                }));\n\n                console.log('Transformed Data:', transformedData); // Debug: Check transformed data\n\n                setData(transformedData);\n            } catch (error) {\n                console.error('Failed to fetch data:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [location.state]);\n\n    return (\n        <div style={{ padding: '25px', overflowX: 'auto' }}>\n            <h1>Product Stock by Category</h1>\n            {loading ? (\n                <Loader /> // Show loader while fetching data\n            ) : data.length === 0 ? (\n                <Message variant='info'>No products to display</Message>\n            ) : (\n                <div style={{ width: '100%', height: '70vh' }}> {/* Adjusted height to be responsive */}\n                    <ResponsiveContainer>\n                        <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"category\" />\n                            <YAxis />\n                            <Tooltip\n                                content={({ payload }) => {\n                                    if (payload && payload.length) {\n                                        const { category, products } = payload[0].payload;\n                                        return (\n                                            <div className=\"custom-tooltip\">\n                                                <p><strong>Category:</strong> {category}</p>\n                                                {products.map(product => (\n                                                    <p key={product.name}>\n                                                        <strong>{product.name}:</strong> {product.stock} units\n                                                    </p>\n                                                ))}\n                                            </div>\n                                        );\n                                    }\n                                    return null;\n                                }}\n                            />\n                            <Legend />\n                            {data.flatMap(d => d.products.map(p => p.name)).map((name, index) => (\n                                <Bar key={name} dataKey={`products.${index}.stock`} name={name} fill={getColor(index)} />\n                            ))}\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Function to get color for each bar (you can customize this)\nconst getColor = (index) => {\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c', '#d0ed57'];\n    return colors[index % colors.length];\n};\n\nexport default ProductChartScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}