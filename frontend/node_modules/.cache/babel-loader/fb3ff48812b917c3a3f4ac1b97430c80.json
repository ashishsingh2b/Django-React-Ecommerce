{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderLineChartScreen.js\",\n  _s = $RefreshSig$();\n// src/screens/OrderChartScreen.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useLocation } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderChartScreen = () => {\n  _s();\n  const location = useLocation();\n  const [data, setData] = useState([]);\n  const [totalOrderValue, setTotalOrderValue] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = () => {\n      try {\n        // Use data passed through location state\n        const fetchedData = location.state ? location.state.orders : [];\n\n        // Calculate total order value\n        const totalValue = fetchedData.reduce((acc, order) => acc + order.totalPrice, 0);\n        setTotalOrderValue(totalValue);\n\n        // Transform data to be grouped by user\n        const userTotals = fetchedData.reduce((acc, order) => {\n          const {\n            user,\n            totalPrice\n          } = order;\n          if (!acc[user]) {\n            acc[user] = 0;\n          }\n          acc[user] += totalPrice;\n          return acc;\n        }, {});\n\n        // Transform the object into an array of objects for the chart\n        const transformedData = Object.keys(userTotals).map(user => ({\n          user,\n          totalPrice: userTotals[user]\n        }));\n        console.log('Transformed Data:', transformedData); // Debug: Check transformed data\n\n        setData(transformedData);\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location.state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '25px',\n      overflowX: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order Chart by User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Order Value: $\", totalOrderValue.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) // Show loader while fetching data\n    : data.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"No orders to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '70vh'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"user\",\n            tickFormatter: value => value.length > 10 ? value.substring(0, 10) + '...' : value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"totalPrice\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderChartScreen, \"DFBG8aP+S/MYNiOu9D8sXGWjDus=\", false, function () {\n  return [useLocation];\n});\n_c = OrderChartScreen;\nexport default OrderChartScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderChartScreen\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","useLocation","Loader","Message","jsxDEV","_jsxDEV","OrderChartScreen","_s","location","data","setData","totalOrderValue","setTotalOrderValue","loading","setLoading","fetchData","fetchedData","state","orders","totalValue","reduce","acc","order","totalPrice","userTotals","user","transformedData","Object","keys","map","console","log","error","style","padding","overflowX","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","toFixed","length","variant","width","height","strokeDasharray","dataKey","tickFormatter","value","substring","fill","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderLineChartScreen.js"],"sourcesContent":["// src/screens/OrderChartScreen.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useLocation } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nconst OrderChartScreen = () => {\n    const location = useLocation();\n    const [data, setData] = useState([]);\n    const [totalOrderValue, setTotalOrderValue] = useState(0);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = () => {\n            try {\n                // Use data passed through location state\n                const fetchedData = location.state ? location.state.orders : [];\n\n                // Calculate total order value\n                const totalValue = fetchedData.reduce((acc, order) => acc + order.totalPrice, 0);\n                setTotalOrderValue(totalValue);\n\n                // Transform data to be grouped by user\n                const userTotals = fetchedData.reduce((acc, order) => {\n                    const { user, totalPrice } = order;\n                    if (!acc[user]) {\n                        acc[user] = 0;\n                    }\n                    acc[user] += totalPrice;\n                    return acc;\n                }, {});\n\n                // Transform the object into an array of objects for the chart\n                const transformedData = Object.keys(userTotals).map(user => ({\n                    user,\n                    totalPrice: userTotals[user]\n                }));\n\n                console.log('Transformed Data:', transformedData); // Debug: Check transformed data\n\n                setData(transformedData);\n            } catch (error) {\n                console.error('Failed to fetch data:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [location.state]);\n\n    return (\n        <div style={{ padding: '25px', overflowX: 'auto' }}>\n            <h1>Order Chart by User</h1>\n\n            {/* Display total order value */}\n            <div style={{ marginBottom: '20px' }}>\n                <h2>Total Order Value: ${totalOrderValue.toFixed(2)}</h2>\n            </div>\n\n            {loading ? (\n                <Loader /> // Show loader while fetching data\n            ) : data.length === 0 ? (\n                <Message variant='info'>No orders to display</Message>\n            ) : (\n                <div style={{ width: '100%', height: '70vh' }}> {/* Adjusted height to be responsive */}\n                    <ResponsiveContainer>\n                        <BarChart data={data}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis\n                                dataKey=\"user\"\n                                tickFormatter={(value) => value.length > 10 ? value.substring(0, 10) + '...' : value}\n                            />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Bar dataKey=\"totalPrice\" fill=\"#8884d8\" />\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default OrderChartScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}