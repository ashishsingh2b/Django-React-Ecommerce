{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderListScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listOrders } from '../actions/orderActions';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OrderListScreen({\n  history\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.user && order.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.products.length > 0 ? order.products.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: product.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 49\n              }, this)) : 'No products'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt ? order.createdAt.substring(0, 10) : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt ? order.paidAt.substring(0, 10) : 'N/A' : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.deliveredAt ? order.deliveredAt.substring(0, 10) : 'N/A' : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  className: \"btn-sm\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/orderchart',\n              state: {\n                orders\n              }\n            },\n            children: \"Order Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(OrderListScreen, \"T22Ya5guJBYtT2WBadWLHdx/0BQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = OrderListScreen;\nexport default OrderListScreen;\n\n// import React, { useEffect } from 'react';\n// import { LinkContainer } from 'react-router-bootstrap';\n// import { Table, Button, Row, Col } from 'react-bootstrap';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Loader from '../components/Loader';\n// import Message from '../components/Message';\n// import { listOrders } from '../actions/orderActions';\n// import { Link } from 'react-router-dom';\n\n// function OrderListScreen({ history }) {\n//     const dispatch = useDispatch();\n\n//     const orderList = useSelector(state => state.orderList);\n//     const { loading, error, orders } = orderList;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n//     useEffect(() => {\n//         if (userInfo && userInfo.isAdmin) {\n//             dispatch(listOrders());\n//         } else {\n//             history.push('/login');\n//         }\n//     }, [dispatch, history, userInfo]);\n\n//     return (\n//         <div>\n//             <h1>Orders</h1>\n//             {loading ? (\n//                 <Loader />\n//             ) : error ? (\n//                 <Message variant='danger'>{error}</Message>\n//             ) : (\n//                 <>\n//                     <Table striped bordered hover responsive className='table-sm'>\n//                         <thead>\n//                             <tr>\n//                                 <th>ID</th>\n//                                 <th>USER</th>\n//                                 <th>PRODUCTS</th>\n//                                 <th>DATE</th>\n//                                 <th>Total</th>\n//                                 <th>PAID</th>\n//                                 <th>DELIVERED</th>\n//                                 <th></th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {orders.map(order => (\n//                                 <tr key={order._id}>\n//                                     <td>{order._id}</td>\n//                                     <td>{order.user && order.user.name}</td>\n//                                     <td>{order.product.name}</td>\n//                                     <td>{order.createdAt.substring(0, 10)}</td>\n//                                     <td>${order.totalPrice}</td>\n//                                     <td>\n//                                         {order.isPaid ? (\n//                                             order.paidAt.substring(0, 10)\n//                                         ) : (\n//                                             <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                         )}\n//                                     </td>\n//                                     <td>\n//                                         {order.isDelivered ? (\n//                                             order.deliveredAt.substring(0, 10)\n//                                         ) : (\n//                                             <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                         )}\n//                                     </td>\n//                                     <td>\n//                                         <LinkContainer to={`/order/${order._id}`}>\n//                                             <Button variant='light' className='btn-sm'>\n//                                                 Details\n//                                             </Button>\n//                                         </LinkContainer>\n//                                     </td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </Table>\n//                     <Row className='py-3'>\n//                         <Col>\n//                             <Link\n//                                 to={{\n//                                     pathname: '/orderchart',\n//                                     state: { orders }\n//                                 }}\n//                             >\n//                                 Order Chart\n//                             </Link>\n//                         </Col>\n//                     </Row>\n//                 </>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default OrderListScreen;\n\n// import React, { useEffect } from 'react';\n// import { LinkContainer } from 'react-router-bootstrap';\n// import { Table, Button, Row, Col } from 'react-bootstrap';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Loader from '../components/Loader';\n// import Message from '../components/Message';\n// import { listOrders } from '../actions/orderActions';\n// import { Link } from 'react-router-dom';\n\n// function OrderListScreen({ history }) {\n//     const dispatch = useDispatch();\n\n//     const orderList = useSelector(state => state.orderList);\n//     const { loading, error, orders } = orderList;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n//     useEffect(() => {\n//         if (userInfo && userInfo.isAdmin) {\n//             dispatch(listOrders());\n//         } else {\n//             history.push('/login');\n//         }\n//     }, [dispatch, history, userInfo]);\n\n//     return (\n//         <div>\n//             <h1>Orders</h1>\n//             {loading ? (\n//                 <Loader />\n//             ) : error ? (\n//                 <Message variant='danger'>{error}</Message>\n//             ) : (\n//                 <Table striped bordered hover responsive className='table-sm'>\n//                     <thead>\n//                         <tr>\n//                             <th>ID</th>\n//                             <th>USER</th>\n//                             <th>DATE</th>\n//                             <th>Total</th>\n//                             <th>PAID</th>\n//                             <th>DELIVERED</th>\n//                             <th></th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {orders.map(order => (\n//                             <tr key={order._id}>\n//                                 <td>{order._id}</td>\n//                                 <td>{order.user && order.user.name}</td>\n//                                 <td>{order.createdAt.substring(0, 10)}</td>\n//                                 <td>${order.totalPrice}</td>\n//                                 <td>\n//                                     {order.isPaid ? (\n//                                         order.paidAt.substring(0, 10)\n//                                     ) : (\n//                                         <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                     )}\n//                                 </td>\n//                                 <td>\n//                                     {order.isDelivered ? (\n//                                         order.deliveredAt.substring(0, 10)\n//                                     ) : (\n//                                         <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                     )}\n//                                 </td>\n//                                 <td>\n//                                     <LinkContainer to={`/order/${order._id}`}>\n//                                         <Button variant='light' className='btn-sm'>\n//                                             Details\n//                                         </Button>\n//                                     </LinkContainer>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </Table>\n//             )}\n//             <Row className='py-3'>\n//                 <Col>\n//                     <Link to='/orderchart'>\n//                         Order Chart\n//                     </Link>\n//                 </Col>\n//             </Row>\n//         </div>\n//     );\n// }\n\n// export default OrderListScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"names":["React","useEffect","LinkContainer","Table","Button","Row","Col","useDispatch","useSelector","Loader","Message","listOrders","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderListScreen","history","_s","dispatch","orderList","state","loading","error","orders","userLogin","userInfo","isAdmin","push","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","striped","bordered","hover","responsive","className","map","order","_id","user","name","products","length","product","index","createdAt","substring","totalPrice","toFixed","isPaid","paidAt","style","color","isDelivered","deliveredAt","to","pathname","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/PracticeReactjs/Fullstack_Project/Django-React Ecommerce/frontend/src/screens/OrderListScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listOrders } from '../actions/orderActions';\nimport { Link } from 'react-router-dom';\n\nfunction OrderListScreen({ history }) {\n    const dispatch = useDispatch();\n\n    const orderList = useSelector(state => state.orderList);\n    const { loading, error, orders } = orderList;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo]);\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>User</th>\n                                <th>Products</th> {/* Column header for products */}\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.user && order.user.name}</td>\n                                    <td>\n                                        {order.products.length > 0 ? (\n                                            order.products.map((product, index) => (\n                                                <div key={index}>{product.name}</div>\n                                            ))\n                                        ) : (\n                                            'No products'\n                                        )}\n                                    </td>\n                                    <td>{order.createdAt ? order.createdAt.substring(0, 10) : 'N/A'}</td>\n                                    <td>${order.totalPrice.toFixed(2)}</td>\n                                    <td>\n                                        {order.isPaid ? (\n                                            order.paidAt ? order.paidAt.substring(0, 10) : 'N/A'\n                                        ) : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        {order.isDelivered ? (\n                                            order.deliveredAt ? order.deliveredAt.substring(0, 10) : 'N/A'\n                                        ) : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button variant='light' className='btn-sm'>\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    <Row className='py-3'>\n                        <Col>\n                            <Link\n                                to={{\n                                    pathname: '/orderchart',\n                                    state: { orders }\n                                }}\n                            >\n                                Order Chart\n                            </Link>\n                        </Col>\n                    </Row>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default OrderListScreen;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import { LinkContainer } from 'react-router-bootstrap';\n// import { Table, Button, Row, Col } from 'react-bootstrap';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Loader from '../components/Loader';\n// import Message from '../components/Message';\n// import { listOrders } from '../actions/orderActions';\n// import { Link } from 'react-router-dom';\n\n// function OrderListScreen({ history }) {\n//     const dispatch = useDispatch();\n\n//     const orderList = useSelector(state => state.orderList);\n//     const { loading, error, orders } = orderList;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n//     useEffect(() => {\n//         if (userInfo && userInfo.isAdmin) {\n//             dispatch(listOrders());\n//         } else {\n//             history.push('/login');\n//         }\n//     }, [dispatch, history, userInfo]);\n\n//     return (\n//         <div>\n//             <h1>Orders</h1>\n//             {loading ? (\n//                 <Loader />\n//             ) : error ? (\n//                 <Message variant='danger'>{error}</Message>\n//             ) : (\n//                 <>\n//                     <Table striped bordered hover responsive className='table-sm'>\n//                         <thead>\n//                             <tr>\n//                                 <th>ID</th>\n//                                 <th>USER</th>\n//                                 <th>PRODUCTS</th>\n//                                 <th>DATE</th>\n//                                 <th>Total</th>\n//                                 <th>PAID</th>\n//                                 <th>DELIVERED</th>\n//                                 <th></th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {orders.map(order => (\n//                                 <tr key={order._id}>\n//                                     <td>{order._id}</td>\n//                                     <td>{order.user && order.user.name}</td>\n//                                     <td>{order.product.name}</td>\n//                                     <td>{order.createdAt.substring(0, 10)}</td>\n//                                     <td>${order.totalPrice}</td>\n//                                     <td>\n//                                         {order.isPaid ? (\n//                                             order.paidAt.substring(0, 10)\n//                                         ) : (\n//                                             <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                         )}\n//                                     </td>\n//                                     <td>\n//                                         {order.isDelivered ? (\n//                                             order.deliveredAt.substring(0, 10)\n//                                         ) : (\n//                                             <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                         )}\n//                                     </td>\n//                                     <td>\n//                                         <LinkContainer to={`/order/${order._id}`}>\n//                                             <Button variant='light' className='btn-sm'>\n//                                                 Details\n//                                             </Button>\n//                                         </LinkContainer>\n//                                     </td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </Table>\n//                     <Row className='py-3'>\n//                         <Col>\n//                             <Link\n//                                 to={{\n//                                     pathname: '/orderchart',\n//                                     state: { orders }\n//                                 }}\n//                             >\n//                                 Order Chart\n//                             </Link>\n//                         </Col>\n//                     </Row>\n//                 </>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default OrderListScreen;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import { LinkContainer } from 'react-router-bootstrap';\n// import { Table, Button, Row, Col } from 'react-bootstrap';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Loader from '../components/Loader';\n// import Message from '../components/Message';\n// import { listOrders } from '../actions/orderActions';\n// import { Link } from 'react-router-dom';\n\n// function OrderListScreen({ history }) {\n//     const dispatch = useDispatch();\n\n//     const orderList = useSelector(state => state.orderList);\n//     const { loading, error, orders } = orderList;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n//     useEffect(() => {\n//         if (userInfo && userInfo.isAdmin) {\n//             dispatch(listOrders());\n//         } else {\n//             history.push('/login');\n//         }\n//     }, [dispatch, history, userInfo]);\n\n//     return (\n//         <div>\n//             <h1>Orders</h1>\n//             {loading ? (\n//                 <Loader />\n//             ) : error ? (\n//                 <Message variant='danger'>{error}</Message>\n//             ) : (\n//                 <Table striped bordered hover responsive className='table-sm'>\n//                     <thead>\n//                         <tr>\n//                             <th>ID</th>\n//                             <th>USER</th>\n//                             <th>DATE</th>\n//                             <th>Total</th>\n//                             <th>PAID</th>\n//                             <th>DELIVERED</th>\n//                             <th></th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {orders.map(order => (\n//                             <tr key={order._id}>\n//                                 <td>{order._id}</td>\n//                                 <td>{order.user && order.user.name}</td>\n//                                 <td>{order.createdAt.substring(0, 10)}</td>\n//                                 <td>${order.totalPrice}</td>\n//                                 <td>\n//                                     {order.isPaid ? (\n//                                         order.paidAt.substring(0, 10)\n//                                     ) : (\n//                                         <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                     )}\n//                                 </td>\n//                                 <td>\n//                                     {order.isDelivered ? (\n//                                         order.deliveredAt.substring(0, 10)\n//                                     ) : (\n//                                         <i className='fas fa-times' style={{ color: 'red' }}></i>\n//                                     )}\n//                                 </td>\n//                                 <td>\n//                                     <LinkContainer to={`/order/${order._id}`}>\n//                                         <Button variant='light' className='btn-sm'>\n//                                             Details\n//                                         </Button>\n//                                     </LinkContainer>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </Table>\n//             )}\n//             <Row className='py-3'>\n//                 <Col>\n//                     <Link to='/orderchart'>\n//                         Order Chart\n//                     </Link>\n//                 </Col>\n//             </Row>\n//         </div>\n//     );\n// }\n\n// export default OrderListScreen;\n"],"mappings":"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AAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,eACR,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACf,EAAA,CAhGQF,eAAe;EAAA,QACHV,WAAW,EAEVC,WAAW,EAGXA,WAAW;AAAA;AAAAsD,EAAA,GANxB7C,eAAe;AAkGxB,eAAeA,eAAe;;AAgB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}